using System;
using System.Globalization;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;

namespace FileDownloader
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        private FileClient fileDownloader;

        public MainWindow()
        {
            InitializeComponent();

            fileDownloader = new FileClient();
            
            if (fileDownloader.Run())
            {
                fileDownloader.CheckServer(true);
            }

            //todo принимаем список файлов и размеров - DONE
            //todo написать конвертер - DONE
            //todo отправляем запрос на файл - DONE
            //todo загружаем файл - DONE
            //todo и обновляем прогресс бар - DONE
            //todo сообщение об окончании загрузки - DONE
            // https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.backgroundworker?redirectedfrom=MSDN&view=net-5.0
        }

        private void UpdateButton_OnClick(object sender, RoutedEventArgs e)
        {
            fileDownloader.CheckServer(false);
            dataGrid.ItemsSource = fileDownloader.GetFileList();
        }

        void datagrid1_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dataGrid.Columns[0].Header = "Имя файла";
            dataGrid.Columns[1].Header = "Размер файла";
        }

        private void DataGrid_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            DataGridTextColumn dataGridTextColumn = e.Column as DataGridTextColumn;
            if (dataGridTextColumn != null && e.PropertyType == typeof(int))
            {
                FileSizeConverter con = new FileSizeConverter();
                (dataGridTextColumn.Binding as Binding).Converter = con;
            }
        }

        public class FileSizeConverter : IValueConverter
        {
            public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
            {

                if (targetType != typeof(string)) throw new NotImplementedException();
                var bytes = Int32.Parse(value.ToString());

                //GB
                if (bytes >= 1073741824.0)
                    return String.Format("{0:##.##}", bytes / 1073741824.0) + " GB";
                //MB
                else if (bytes >= 1048576.0)
                    return String.Format("{0:##.##}", bytes / 1048576.0) + " MB";
                //KB
                else if (bytes >= 1024.0)
                    return String.Format("{0:##.##}", bytes / 1024.0) + " KB";
                //Bytes
                else if (bytes > 0 && bytes < 1024.0)
                    return bytes.ToString() + " Bytes";
                else return bytes.ToString() + " Bytes";
            }

            public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
            {
                throw new NotImplementedException();
            }
        }

        private void DownloadButton_OnClick(object sender, RoutedEventArgs e)
        {
            FileInfo fi = (FileInfo)dataGrid.SelectedItem;
            if (fi == null)
            {
                MessageBox.Show("Список файлов пуст!");
                return;
            } 

            string fn = fi.FileName;
            string dir = AppDomain.CurrentDomain.BaseDirectory;
            beforeLoadFile();
            fileDownloader.GetFile(fn, dir, fi.FileSize, progressBar);
            afterLoadFile();

        }

        void beforeLoadFile()
        {
            UpdateButton.IsEnabled = false;
            DownloadButton.IsEnabled = false;
            QuitButton.IsEnabled = false;
        }

        void afterLoadFile()
        {
            UpdateButton.IsEnabled = true;
            DownloadButton.IsEnabled = true;
            QuitButton.IsEnabled = true;
        }

        private void QuitButton_OnClick(object sender, RoutedEventArgs e)
        {
            fileDownloader.Quit();
            
            Application.Current.Shutdown();
        }

    }
}
